---
title: "quartotest3"
format: html
editor: visual
---

```{r}
here::i_am("test3.Rproj")
library(here)
library(vroom)
library(ggplot2)
theme_set(theme_bw())
```

## Data import

```{r}
library(readr)
bank <- read_delim("bank.csv")
spotify <- readRDS("top-spotify-hits-2000-2019.Rds")
```

## Data transformation

```{r}
#| message: false
library(dplyr)
```

## Elementary operations

### Data frames and tibble high level operations

```{r}
#print(names(bank))
print(names(spotify))
#print(dim(bank))

#print(summary(bank))
```

### Filtering, selecting and Extracting

```{r}
#bank |> filter(age>=50)|> nrow() |> print()
#bank |> filter(marital=="married",education=="primary")|> nrow() |> print()
#bank |> filter(age <=25 & (marital=="single" | education=="tertiary")) |>
    summary() |> print()

```

### Selecting

```{r}
bank |> select(age,job)|> print()
#bank |> pull(age)|> summary()
#bank |> select(where(is.numeric))|> summary()
#bank |> pull(age)|>  median() |> print()
```

## Creating Variables

### Mutating

```{r}
  bank |> group_by(marital) |> summarise(m_age=median(age))
```


# Gradded Lab 2023 : 

## Quest 1 -> Done
```{r}
print(summary(spotify))
```

sumary(spotify)
## Quest 2 : 
```{r}
spotify |> distinct(song) |> nrow() |> print()
```
## Quest 3 :
```{r}
spotify |> group_by(year) |> summarise(nb=n())
```
## Quest 4 :
```{r}
spotify |> 
  group_by(artist) |> 
  summarise((nb = n_distinct(song))) |> 
  arrange(desc(nb)) |> 
  slice(1)
```

## Quest 5 :
```{r}
spotify |>
  group_by(genre) |>
  summarise(
    nb=n(),
    min(tempo),
    max(tempo),
    mean(tempo),
    median(tempo))
```










